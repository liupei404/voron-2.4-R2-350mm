
[mcu eddy] 
serial: /dev/serial/by-id/usb-Klipper_rp2040_45474E621B0632BA-if00

# eddy温度显示
[temperature_sensor btt_eddy_mcu] 
sensor_type: temperature_mcu 
sensor_mcu: eddy 

# 替代原来的probe配置项
[probe_eddy_current btt_eddy]
sensor_type: ldc1612 
z_offset: 1.05 # 不要设置为 0 即可 
i2c_mcu: eddy 
i2c_bus: i2c0f 
x_offset:0 # 根据实际相对于喷嘴的偏移量设置 
y_offset: 20 # 根据实际相对于喷嘴的偏移量设置 
data_rate: 500
reg_drive_current: 15

# usb版本热敏配置，用于温度补偿 coil 版本没有内置的热敏电阻，所以无需该配置
[temperature_probe btt_eddy] 
sensor_type: Generic 3950 
sensor_pin: eddy:gpio26 
horizontal_move_z: 2

[bed_mesh]
speed: 500 # 探测点之间的移动速度，默认 200
horizontal_move_z: 2 # 探测时 z轴移动的距离 
mesh_min: 20, 20 # 远点第一个坐标点
mesh_max: 280, 280 # 近点最后一个坐标点
zero_reference_position: 150,150 # 相对零点 即热床中心位置
mesh_pps: 0, 0 # *插值
fade_start: 0.6 # 网格淡出起始点 从0.6mm 处开始进行网格淡出 
fade_end: 10.0 # 网格淡出结束点 到10mm 处网格补偿归零
probe_count: 21,21 # *探测点数量，必须时单数，因为有一个点必须位于热床中心位置 
algorithm: bicubic # *插值算法 这里一定要这么设置，因为默认的lagrange有点位的上限

[safe_z_home]
home_xy_position: 172, 301 # z限位的位置
speed: 200 #工具头移动到安全Z原点的速度。
z_hop: 10
#   在归位前抬升Z轴的距离（mm）。这将用于任何归位命令，即使
#   它没有将Z轴归位。
#   如果Z轴已经归位，并且当前的Z轴位置小于z_hop，那么这条命令
#   将把打印头提升到z_hop的高度。如果
#   Z轴尚未归位，则打印头将被提升z_hop的高度。
#   默认不执行Z抬升。
z_hop_speed: 15
#   在归位之前，Z轴抬升的速度（单位：mm/s）。
#   默认为15mm/s。
#move_to_previous: False
#   当设置为 "True "时，X轴和Y轴在Z轴归位后会重置到之前的位置。
#   默认为false。

# 手动z偏移校准
[gcode_macro eddy_probe]
gcode:
    g28
    G0 X150 Y150 F6000  
    PROBE_EDDY_CURRENT_CALIBRATE CHIP=btt_eddy

# 手动扫床
[gcode_macro eddy_mesh]
gcode:
    g28
    Z_TILT_ADJUST
    BED_MESH_CALIBRATE METHOD=scan SCAN_MODE=rapid

# 手动扫平，注意z倾斜要小于2毫米，否则会撞床
[gcode_macro eddy_tilt]
gcode:
    g28
    Z_TILT_ADJUST METHOD=scan horizontal_move_z=2
    

