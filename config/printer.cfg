
################################################################################
# VORON 2.4  350mm  打印机配置文件
################################################################################
# COPYRIGHT © 2021 - 2025  Samuel Wang
# 本文件可以根据GNU GPLv3许可协议进行分发
# This file may be distributed under the terms of the GNU GPLv3 license
################################################################################
# Discord: Samuel-0-0#0576    Github: Samuel-0-0    Bilibili: Samuel-0_0
################################################################################
# 文件用途：打印机的主板、结构、配置文件加载
################################################################################
# 根据你的设置编辑此文件
################################################################################
#
# 电机与原点位置说明
# ----------------
# |Z1          Z2|
# |  XB-----YA   |
# |  |       |   |
# |  |       |   |
# |  0--------   |
# |Z           Z3|
# -----front------
#
################################################################################

[include mainsail.cfg]

# host MCU service is preinstalled and ready to use with:
[mcu CB1]
serial: /tmp/klipper_host_mcu

#############################################################################################################
### 基本配置
### 除非您确切知道如何进行，否则请勿更改此部分.
#############################################################################################################
[include Voron2_M8P-v2.0_config.cfg] ## 主板
[include sample-bigtreetech-ebb-sb-usb-v1.0.cfg] ## 工具头板
#[include Klipper-Z-Calibration.cfg] ## 自动Z偏移 未使用
[include Macros.cfg]

######################################################################
## 其他配置加载
######################################################################

## 兔子多色系统
## MMB
# [include mmb/addons/mmu_erec_cutter.cfg]
# [include mmb/base/mmu_macro_vars.cfg]
## AFC Lite
# [include mmu/base/*.cfg]
# [include mmu/optional/client_macros.cfg]

## 龟盒多色
[include AFC/*.cfg]

## 自动关机
[include AutoShutdown.cfg]

## 断料检测
# [include sfs-v2.0.cfg]



######################################################################
## eddy 涡流扫平板配置 作为自动调平传感器，但使用另一设备作为 Z 轴限位开关
######################################################################
# MCU 部分仅适用于 Eddy USB。对于 Eddy Coil，您将使用连接 Eddy Coil 的工具板的 MCU 名称。.
[mcu eddy]
serial: /dev/serial/by-id/usb-Klipper_rp2040_504450610881A21C-if00 # 这是涡流探头的串行地址。您可以使用 klipper 实例的终端（通常通过 SSH）并使用命令“ls /dev/serial/by-id”找到它。 
restart_method: command
#你读过宏前面的所有注释吗？确保你读过了，然后取消你需要的注释。读完后删除这行。.

## eddy温度显示
[temperature_sensor btt_eddy_mcu]
sensor_type: temperature_mcu # 设置 Klipper 读取的传感器类型
sensor_mcu: eddy # 设置涡流探头温度传感器的 MCU
min_temp: 10 # 设置涡流温度传感器运行的最低温度
max_temp: 110 # 设置涡流温度传感器运行的最高温度

## 替代原来的probe配置项
[probe_eddy_current btt_eddy]
sensor_type: ldc1612
#z_offset: 2.5 # 不要设置为 0 即可
z_offset: 0.5 # 不要设置为 0 即可 
#i2c_address:
i2c_mcu: eddy  # 此值适用于 Eddy USB，但需要根据您使用的 MCU 针对 Eddy Coil 进行调整.
i2c_bus: i2c0f # 此值适用于 Eddy USB，但需要根据您使用的 I2C 总线针对 Eddy Coil 进行调整.
# 
# 使用此处描述的方法测量以下偏移量：https://www.klipper3d.org/Probe_Calibrate.html#calibrating-probe-x-and-y-offsets 对于标准 Voron stealthburner X 托架，无需更改以下默认值.
x_offset: 0 # 根据实际相对于喷嘴的偏移量设置 
y_offset: 20.00 # 根据实际相对于喷嘴的偏移量设置 

# usb版本热敏配置，用于温度补偿 coil 版本没有内置的热敏电阻，所以无需该配置.
[temperature_probe btt_eddy]
sensor_type: Generic 3950
sensor_pin: eddy:gpio26
horizontal_move_z: 2

[bed_mesh]
# 按照论坛将relative_reference_index居中，这仅适用于手动调用BED_MESH_CALIBRATE，例如，如果使用自适应床网格宏，所有这些参数都会被动态覆盖:
# [(9x9)-1] / 2 = 40
# [(7x7)-1] / 2 = 24
# [(5x5)-1] / 2 = 12
horizontal_move_z: 2 # 探测时 z轴移动的距离 
speed: 500 # 探测点之间的移动速度，默认 200
# 对于以下网格尺寸，坐标需要能够通过探针中心到达。要计算有效的坐标，请使用以下公式:
# mesh x min = position_min_x + greater_of (15mm or x_offset) <--- 在这一术语中，仅当 x 偏移为正时才考虑，如果为负则忽略.
# mesh y min = position_min_y + greater_of (15mm or y_offset) <--- 在本项中，仅当 y 偏移为正时才考虑，如果为负则忽略.
# mesh x max = position_max_x - greater_of (15mm or |x_offset|) <--- 在这个术语中，如果 x 偏移量为负，则仅考虑，如果为正，则忽略.
# mesh y max = position_max_y - greater_of (15mm or |y_offset|) <--- 在本项中，仅当 y 偏移为负时才考虑，如果为正则忽略.
# 例子: 假设您有一张 300 x 300 的床，其最大 x 和 y 位置为 300，最小为 0。您的探针偏移量为 X 轴 -20，Y 轴 10
# 对于网格 x 最小值，我们忽略 x 偏移项，因为它为负数。因此，网格 x 最小值 = 15
# 对于网格 y min，我们不会忽略 y 偏移项，因为它是正数，但小于 15，所以我们使用 15。因此网格 y min = 15
# 对于网格 x 最大值，我们不忽略 x 偏移项，因为它为负数。它也大于 15。因此，网格 x 最大值 = 280
# 对于网格 y 最大值，我们忽略 y 偏移项，因为它是正数，但小于 15，所以我们使用 15。因此网格 y 最大值 = 285
# 最终结果将是 mesh_min: 15, 15 mesh_max: 280, 285
mesh_min: 20, 20                 # 远点第一个坐标点
mesh_max: 330, 300               # 近点最后一个坐标点
zero_reference_position: 175,175 # 相对零点 即热床中心位置
mesh_pps: 0, 0                   # *插值
fade_start: 0.26                 # 网格淡出起始点 从0.26mm 处开始进行网格淡出
fade_end: 2.0                    # 网格淡出结束点 到2mm 处网格补偿归零
probe_count: 9, 9                # *探测点数量，必须时单数，因为有一个点必须位于热床中心位置 
algorithm: bicubic               # *插值算法 这里一定要这么设置，因为默认的lagrange有点位的上限

#scan_overshoot: 8  #如果 X 轴上仍有剩余空间，可以允许扫描过冲，从而实现更平滑的移动和更精确的扫描，请取消注释此部分。如果您使用的是标准 Voron 支架，则取消注释此部分应该没问题。.

# 如果您使用 Eddy 作为探针和归位限位器，请取消注释
#[safe_z_home]
#home_xy_position: 150, 150 # 选择位于床身中心的 X,Y 位置。对于 300x300 的机器，该位置应为 150, 150。使用相同的原理计算床身中心.
#z_hop: 10
#z_hop_speed: 25
#speed: 200

###############################宏和相关################################
#本节包含宏和相关配置部分。有些必须使用，有些则可选。请阅读每个宏上方的注释，以确定是否需要在您的安装中取消注释。.


# 如果您使用 Eddy 作为探针和归位限位器，并且希望使用 beta z 偏移控制，请取消注释此项
#[save_variables]
#filename: ~/printer_data/config/variables.cfg



# 如果您使用 Eddy 作为探针和归位限位器，请取消注释
#[force_move]
#enable_force_move: True # 如果没有其他方法将 Z 轴归位，并且需要校准 Eddy，则允许用户将 z 轴向下移动.



# 如果您使用 Eddy 作为探针和归位限位器，并且希望使用 beta z 偏移控制，请取消注释此项
#[delayed_gcode RESTORE_PROBE_OFFSET]
#initial_duration: 1.
#gcode:
#  {% set svv = printer.save_variables.variables %}
#  {% if not printer["gcode_macro SET_GCODE_OFFSET"].restored %}
#    SET_GCODE_VARIABLE MACRO=SET_GCODE_OFFSET VARIABLE=runtime_offset VALUE={ svv.nvm_offset|default(0) }
#    SET_GCODE_VARIABLE MACRO=SET_GCODE_OFFSET VARIABLE=restored VALUE=True
#  {% endif %}



# 如果您使用 Eddy 作为探针和归位限位器，请取消注释
# 请注意，只有安装了 KNOMI 后才可以使用以下行.
#[gcode_macro G28]
#rename_existing: G28.1
#gcode:
  #SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=homing VALUE=True # 如果使用 KNOMI，请取消注释，然后从 KNOMI.cfg 中删除 G28 宏
#  G28.1 {rawparams}
#  {% if not rawparams or (rawparams and 'Z' in rawparams) %}
#    PROBE
#    SET_Z_FROM_PROBE
#  {% endif %}
  #SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=homing VALUE=False # 如果使用 KNOMI，请取消注释，然后从 KNOMI.cfg 中删除 G28 宏



# 如果您使用 Eddy 作为探针和归位限位器，请取消注释
#[gcode_macro SET_Z_FROM_PROBE]
#gcode:
#    {% set cf = printer.configfile.settings %}
#    SET_GCODE_OFFSET_ORIG Z={printer.probe.last_z_result - cf['probe_eddy_current btt_eddy'].z_offset + printer["gcode_macro SET_GCODE_OFFSET"].runtime_offset}
#    G90
#    G1 Z{cf.safe_z_home.z_hop}


# 如果您使用 Eddy 作为探针和归位限位器，并且希望使用 beta z 偏移控制，请取消注释此项
#[gcode_macro Z_OFFSET_APPLY_PROBE]
#rename_existing: Z_OFFSET_APPLY_PROBE_ORIG
#gcode:
#  SAVE_VARIABLE VARIABLE=nvm_offset VALUE={ printer["gcode_macro SET_GCODE_OFFSET"].runtime_offset }



# 如果您使用 Eddy 作为探针和归位限位器，并且希望使用 beta z 偏移控制，请取消注释此宏中的行
[gcode_macro SET_GCODE_OFFSET]
rename_existing: SET_GCODE_OFFSET_ORIG
variable_restored: False  # 标记该var是否已从NVM恢复
variable_runtime_offset: 0
gcode:
#  {% if params.Z_ADJUST %}
#    SET_GCODE_VARIABLE MACRO=SET_GCODE_OFFSET VARIABLE=runtime_offset VALUE={ printer["gcode_macro SET_GCODE_OFFSET"].runtime_offset + params.Z_ADJUST|float }
#  {% endif %}
#  {% if params.Z %}
#    {% set paramList = rawparams.split() %}
#    {% for i in range(paramList|length) %}
#      {% if paramList[i]=="Z=0" %}
#        {% set temp=paramList.pop(i) %}
#        {% set temp="Z_ADJUST=" + (-printer["gcode_macro SET_GCODE_OFFSET"].runtime_offset)|string %}
#        {% if paramList.append(temp) %}{% endif %}
#      {% endif %}
#    {% endfor %}
#    {% set rawparams=paramList|join(' ') %}
#    SET_GCODE_VARIABLE MACRO=SET_GCODE_OFFSET VARIABLE=runtime_offset VALUE=0
#  {% endif %}
  SET_GCODE_OFFSET_ORIG { rawparams }



# 该宏可自动执行许多频率映射过程，并大大简化步骤.
[gcode_macro PROBE_EDDY_CURRENT_CALIBRATE_AUTO]
gcode:
  BED_MESH_CLEAR
  G28 X Y
  G90 # Abs positioning
  G1 X{ printer.toolhead.axis_maximum.x/2 } Y{ printer.toolhead.axis_maximum.y/2 } F6000
  {% if 'z' not in printer.toolhead.homed_axes %}
    SET_KINEMATIC_POSITION Z={ printer.toolhead.axis_maximum.z-1 } # 允许用户将其向下移动直至接触.
  {% endif %}
  PROBE_EDDY_CURRENT_CALIBRATE {rawparams}

# 手动z偏移校准
[gcode_macro eddy_probe]
gcode:
    g28
    G0 X175 Y175 F6000  
    PROBE_EDDY_CURRENT_CALIBRATE CHIP=btt_eddy

# 手动扫床
[gcode_macro eddy_mesh]
gcode:
    g28
    BED_MESH_CALIBRATE METHOD=scan SCAN_MODE=rapid

# 手动扫平，注意z倾斜要小于2毫米，否则会撞床
[gcode_macro eddy_tilt]
gcode:
    g28
    QUAD_GANTRY_LEVEL METHOD=scan horizontal_move_z=2

#此宏是可选的，但如果您想要在每次打印前运行快速扫描，它非常有用。只需取消注释该宏，并在打印启动代码中添加 BED_MESH_SCAN 即可。.
[gcode_macro BED_MESH_CALIBRATE]
rename_existing: BTT_BED_MESH_CALIBRATE
gcode:
#  SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=probing VALUE=True #仅当使用 KNOMI 时才取消注释此行，然后从 KNOMI.cfg 中删除 BED_MESH_CALIBRATE 宏
  BTT_BED_MESH_CALIBRATE METHOD=rapid_scan
#  SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=probing VALUE=False #仅当使用 KNOMI 时才取消注释此行，然后从 KNOMI.cfg 中删除 BED_MESH_CALIBRATE 宏


## <----------------- 以下系统自动生成不需要更改 --------------->

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [input_shaper]
#*# shaper_type_x = mzv
#*# shaper_freq_x = 51.6
#*# shaper_type_y = mzv
#*# shaper_freq_y = 38.2
#*#
#*# [probe_eddy_current btt_eddy]
#*# reg_drive_current = 16
#*# calibrate =
#*# 	0.050000:3275886.818,0.090000:3274491.921,0.130000:3273051.130,
#*# 	0.170000:3271637.532,0.210000:3270213.209,0.250000:3268872.120,
#*# 	0.290000:3267533.943,0.330000:3266187.627,0.370000:3264818.369,
#*# 	0.410000:3263545.727,0.450000:3262227.885,0.490000:3260941.663,
#*# 	0.530000:3259664.068,0.570000:3258432.451,0.610000:3257157.193,
#*# 	0.650000:3255931.100,0.690000:3254690.094,0.730000:3253506.307,
#*# 	0.770000:3252362.566,0.810000:3251189.593,0.850000:3250022.864,
#*# 	0.890000:3248927.210,0.930000:3247836.374,0.970000:3246713.562,
#*# 	1.010000:3245664.235,1.050000:3244642.208,1.090000:3243571.467,
#*# 	1.130000:3242544.612,1.170000:3241512.363,1.210000:3240567.057,
#*# 	1.250000:3239597.390,1.290000:3238652.757,1.330000:3237696.648,
#*# 	1.370000:3236837.955,1.410000:3235950.408,1.450000:3235053.676,
#*# 	1.490000:3234200.930,1.530000:3233335.424,1.570000:3232528.167,
#*# 	1.610000:3231682.214,1.650000:3230844.183,1.690000:3230060.838,
#*# 	1.730000:3229284.741,1.770000:3228516.083,1.810000:3227761.145,
#*# 	1.850000:3227029.114,1.890000:3226321.859,1.930000:3225621.205,
#*# 	1.970000:3224901.452,2.010000:3224273.370,2.050000:3223569.408,
#*# 	2.090000:3222916.664,2.130000:3222264.616,2.170000:3221667.740,
#*# 	2.210000:3221040.387,2.250000:3220409.446,2.290000:3219831.085,
#*# 	2.330000:3219232.433,2.370000:3218661.584,2.410000:3218087.377,
#*# 	2.450000:3217529.760,2.490000:3217003.094,2.530000:3216467.628,
#*# 	2.570000:3215941.422,2.610000:3215410.007,2.650000:3214924.182,
#*# 	2.690000:3214436.327,2.730000:3213952.158,2.770000:3213450.866,
#*# 	2.810000:3212990.001,2.850000:3212521.133,2.890000:3212070.583,
#*# 	2.930000:3211620.029,2.970000:3211198.302,3.010000:3210797.126,
#*# 	3.050000:3210356.090,3.090000:3209944.088,3.130000:3209567.251,
#*# 	3.170000:3209151.179,3.210000:3208771.769,3.250000:3208392.447,
#*# 	3.290000:3208023.355,3.330000:3207654.344,3.370000:3207297.329,
#*# 	3.410000:3206907.416,3.450000:3206600.627,3.490000:3206278.192,
#*# 	3.530000:3205906.543,3.570000:3205606.930,3.610000:3205272.311,
#*# 	3.650000:3204938.450,3.690000:3204627.712,3.730000:3204315.108,
#*# 	3.770000:3204008.706,3.810000:3203719.262,3.850000:3203427.065,
#*# 	3.890000:3203129.911,3.930000:3202838.947,3.970000:3202571.872,
#*# 	4.010000:3202298.384,4.050000:3202009.279
#*#
#*# [temperature_probe btt_eddy]
#*# calibration_temp = 50.618914
#*# drift_calibration =
#*# 	3296318.056562, -770.105707, 5.383656
#*# 	3265767.516013, -272.798650, 1.375205
#*# 	3243797.294005, 2.734314, -0.718411
#*# 	3226716.688000, 204.245564, -2.276675
#*# 	3214918.289061, 301.117128, -2.979380
#*# 	3205576.066115, 378.341697, -3.552980
#*# 	3198226.974189, 441.704977, -4.075114
#*# 	3192971.542789, 466.941577, -4.234047
#*# 	3188997.634111, 478.720015, -4.295220
#*# drift_calibration_min_temp = 42.19442203512136
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  -0.089869, -0.042977, -0.013849, -0.007021, 0.004859, -0.001713, -0.016493, -0.034462, -0.035378
#*# 	  -0.068205, -0.031667, -0.015815, 0.001313, 0.016485, 0.009376, 0.003229, -0.018489, -0.025000
#*# 	  -0.069758, -0.030074, -0.009056, -0.002939, 0.003224, -0.001286, -0.020097, -0.034461, -0.048090
#*# 	  -0.053090, -0.037636, -0.010475, 0.002122, 0.003498, -0.005941, -0.009044, -0.032334, -0.046433
#*# 	  -0.060273, -0.035129, -0.014370, -0.001710, 0.002417, -0.009326, -0.018926, -0.043254, -0.050529
#*# 	  -0.039553, -0.036747, -0.020379, -0.006508, -0.003222, -0.008139, -0.026889, -0.042586, -0.060763
#*# 	  -0.033056, -0.022787, -0.012558, -0.007489, -0.002025, -0.012295, -0.025731, -0.042769, -0.061104
#*# 	  -0.032775, -0.036791, -0.030131, -0.022283, -0.013254, -0.025232, -0.032260, -0.043979, -0.069047
#*# 	  -0.036495, -0.041163, -0.033312, -0.025724, -0.017616, -0.029334, -0.034914, -0.038111, -0.053461
#*# x_count = 9
#*# y_count = 9
#*# mesh_x_pps = 0
#*# mesh_y_pps = 0
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 20.0
#*# max_x = 330.0
#*# min_y = 20.0
#*# max_y = 300.0
